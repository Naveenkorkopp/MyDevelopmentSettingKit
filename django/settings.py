"""
Django settings for server project.

Generated by 'django-admin startproject' using Django 3.0.

For more information on this file, see
https://docs.djangoproject.com/en/3.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.0/ref/settings/
"""

import os
import sys
import environ
from datetime import timedelta

env = environ.Env()

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

ROOT_DIR = environ.Path(__file__) - 3  # (/a/b/myfile.py - 3 = /)

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '@)q%)4wx26fg)ppi6@4st%szunopo)0e8ejl6ky2pt99(=$&%$'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = env.bool('DJANGO_DEBUG', True)

ALLOWED_HOSTS = env.list('ALLOWED_HOSTS', default=['*', ])

ENVIRONMENT = env('ENVIRONMENT', default='local')

BUILD_NUMBER = env('VERSION', default='local')

DJANGO_APPS = [
    'djangocms_admin_style',  # template package for Django Admin
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.humanize',
    'django.contrib.gis',
]

THIRD_PARTY_APPS = [
    'rest_framework',  # Rest API
    'knox',  # Token Management
    'django_extensions',  # Extensions to django
    'parler',  # Language switch on models
    'filer',  # Media upload
    'easy_thumbnails',  # Thumbnail management
    'mptt',
    'django_better_admin_arrayfield',  # Widget for ArrayField
    'rangefilter',  # Datetime filter for admin
    'simple_history',  # Version control on models
    'admin_auto_filters',  # Autocomplete filter for admin
    'storages',  # Static and Media storage on s3
    'django_admin_multiple_choice_list_filter',
    'corsheaders',  # cors
    'import_export',  # For reporting exports
    'admin_reorder',  # Admin re-order
    'admin_numeric_filter',  # Admin numeric filter
    'drf_yasg',  # Swagger documentation
    'django_select2',  # Select2 features
    'django_select2_admin_filters',  # Multi select autocomplete filter
    'ckeditor',  # RichText editor for admin
]

LOCAL_APPS = [
]


# Application definition
INSTALLED_APPS = DJANGO_APPS + LOCAL_APPS + THIRD_PARTY_APPS


MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'corsheaders.middleware.CorsMiddleware',  # Cors allow host from pdf viewer web host.
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'simple_history.middleware.HistoryRequestMiddleware',  # The historical models can track who made each change.
    'admin_reorder.middleware.ModelAdminReorder',  # Modifies index.html page in the admin.
]

# ------------------------------------------------------------------------------
# Admin Index page ordering
# ------------------------------------------------------------------------------
ADMIN_REORDER = (
    'sites',
    {
        'app': 'accounts',
        'models': (
            'accounts.User',
            'auth.Group'
        )
    },
    {
        'app': 'filer',
        'label': 'Media Repository'
    },
)


ROOT_URLCONF = 'config.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': ['templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'config.wsgi.application'


# Database
# https://docs.djangoproject.com/en/2.1/ref/settings/#databases
# ------------------------------------------------------------------------------
# DATABASE INFORMATION
# ------------------------------------------------------------------------------
DATABASES = {
    'default': {
        'ENGINE': 'django.contrib.gis.db.backends.postgis',
        'NAME': env('DJANGO_DB_NAME', default=''),
        'USER': env('DJANGO_DB_USER', default='postgres'),
        'PASSWORD': env('DJANGO_DB_PASSWORD', default='postgres'),
        'HOST': env('DJANGO_DB_HOST', default='postgres'),
        'PORT': env('DJANGO_DB_PORT', default='5432'),
    }
}


# ------------------------------------------------------------------------------
# LOGGING INFORMATION
# ------------------------------------------------------------------------------
LOG_DIR = env('LOG_DIR', default=str(ROOT_DIR('logs')))

LOGGING_LEVEL = env('APP_LOGGING_LEVEL', default='INFO')


LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'filters': {
        'require_debug_false': {
            '()': 'django.utils.log.RequireDebugFalse'
        }
    },
    'formatters': {
        'verbose': {
            'format': "[%(levelname)s] - %(asctime)s [process: %(process)d, thread: %(thread)d]:%(lineno)s\n%(message)s",
            'datefmt': "%b %e, %I:%M:%S %p"
        },
        'simple': {
            'format': "[process: %(process)d, time: %(asctime)s] %(message)s",
        },
    },
    'handlers': {
        'mail_admins': {
            'level': 'ERROR',
            'filters': ['require_debug_false', ],
            'class': 'django.utils.log.AdminEmailHandler',
            'include_html': True
        },
        'console': {
            'level': 'DEBUG',
            'class': 'logging.StreamHandler',
            'formatter': 'simple',
        },
    },
    'loggers': {
        'django.request': {
            'handlers': ['mail_admins'],
            'level': 'ERROR',
            'propagate': True
        },
        'django.security.DisallowedHost': {
            'level': 'ERROR',
            'handlers': ['console', 'mail_admins'],
            'propagate': True
        },
        'apps': {
            'handlers': ['console'],
            'level': LOGGING_LEVEL,
            'propagate': True
        },
        # # Enable DB Query logging
        # 'django.db.backends': {
        #     'level': 'DEBUG',
        #     'handlers': ['console']
        # }
    },
}

AUTH_USER_MODEL = 'accounts.User'

# ------------------------------------------------------------------------------
# REST FRAMEWORK SETTINGS
# ------------------------------------------------------------------------------
REST_FRAMEWORK = {
    'EXCEPTION_HANDLER': 'apps.core.utils.exception_handler.custom_exception_handler',
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'knox.auth.TokenAuthentication',
        'rest_framework.authentication.BasicAuthentication',
    ),
    'DEFAULT_PARSER_CLASSES': [
        'rest_framework.parsers.FormParser',
        'rest_framework.parsers.MultiPartParser',
        'rest_framework.parsers.JSONParser',
    ],
    'DEFAULT_RENDERER_CLASSES': [
        'rest_framework.renderers.JSONRenderer',
        'rest_framework.renderers.BrowsableAPIRenderer',
    ],
    'DEFAULT_PAGINATION_CLASS': 'rest_framework.pagination.PageNumberPagination',
    'PAGE_SIZE': 10,
    'DATETIME_FORMAT': "%Y-%m-%dT%H:%M:%S.%f%z",
}

LOGIN_URL = 'apps.accounts:login'
LOGOUT_URL = 'apps.accounts:logout'

# Password validation
# https://docs.djangoproject.com/en/2.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'apps.accounts.utils.password_validators.NumberValidator',
    },
    {
        'NAME': 'apps.accounts.utils.password_validators.UppercaseValidator',
    },
    {
        'NAME': 'apps.accounts.utils.password_validators.SymbolValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/2.1/topics/i18n/

LANGUAGE_CODE = 'en'

TIME_INPUT_FORMATS = [
    '%I:%M %p',  # 6:22 PM
]

TIME_ZONE = 'Canada/Eastern'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.1/howto/static-files/

STATIC_URL = '/static/'
STATIC_ROOT = os.path.join(BASE_DIR, 'static_root')
STATICFILES_DIRS = (
    os.path.join(BASE_DIR, 'static'),
)

MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, "media")
MEDIA_BASE_URL = 'http://localhost:8000'  # For local

if ENVIRONMENT != 'local':
    # AWS s3 settings
    AWS_STORAGE_BUCKET_NAME = env('AWS_STORAGE_BUCKET_NAME')
    AWS_S3_REGION_NAME = env('AWS_S3_REGION_NAME')
    AWS_S3_CUSTOM_DOMAIN = f'{AWS_STORAGE_BUCKET_NAME}.s3.amazonaws.com'

    # Static files storage path
    STATICFILES_LOCATION = 'static'
    STATICFILES_STORAGE = 'config.storages.StaticStorage'
    # Media files storage path
    MEDIAFILES_LOCATION = 'media'
    DEFAULT_FILE_STORAGE = 'config.storages.MediaStorage'
    MEDIA_BASE_URL = f'https://{AWS_S3_CUSTOM_DOMAIN}'  # For other envs


THUMBNAIL_HIGH_RESOLUTION = True
THUMBNAIL_PROCESSORS = (
    'easy_thumbnails.processors.colorspace',
    'easy_thumbnails.processors.autocrop',
    'filer.thumbnail_processors.scale_and_crop_with_subject_location',
    'easy_thumbnails.processors.filters'
)


# ------------------------------------------------------------------------------
# CACHE Configuration
# ------------------------------------------------------------------------------
CACHES = {
    "default": {
        "BACKEND": "django_redis.cache.RedisCache",
        "LOCATION": env('REDIS_CACHE_DEFAULT', default="redis://redis:6379/0"),
        "OPTIONS": {
            "CLIENT_CLASS": "django_redis.client.DefaultClient"
        },
        "KEY_PREFIX": "SEIU-BACKEND"
    },
    "select2": {
        "BACKEND": "django_redis.cache.RedisCache",
        "LOCATION": env('REDIS_CACHE_SELECT2', default="redis://redis:6379/1"),
        "OPTIONS": {
            "CLIENT_CLASS": "django_redis.client.DefaultClient",
        }
    }
}
# Tell select2 which cache configuration to use:
SELECT2_CACHE_BACKEND = "select2"
# -------------------------------------------------------------------------------
# DJANGO DEBUG TOOLBAR SETTINGS (Only on Local and not during testing)
# -------------------------------------------------------------------------------
TESTING = len(sys.argv) > 1 and sys.argv[1] == 'test'

if ENVIRONMENT == 'local' and DEBUG and not TESTING:
    INSTALLED_APPS += ('debug_toolbar',)
    MIDDLEWARE += ('debug_toolbar.middleware.DebugToolbarMiddleware',)
    INTERNAL_IPS = ['localhost', ]
    # Ref : https://django-debug-toolbar.readthedocs.io/en/latest/configuration.html
    DEBUG_TOOLBAR_CONFIG = {
        'SHOW_TOOLBAR_CALLBACK': lambda x: True,
        # 'SKIP_TEMPLATE_PREFIXES': ('django/', 'admin/'),
        # 'ENABLE_STACKTRACES': False,
        # 'ENABLE_STACKTRACES_LOCALS': False,
    }
    DEBUG_TOOLBAR_PANELS = [
        'debug_toolbar.panels.versions.VersionsPanel',
        'debug_toolbar.panels.settings.SettingsPanel',
        'debug_toolbar.panels.timer.TimerPanel',
        'debug_toolbar.panels.sql.SQLPanel',
        'debug_toolbar.panels.templates.TemplatesPanel',
    ]

# ------------------------------------------------------------------------------
# WORKER INFORMATION
# ------------------------------------------------------------------------------
QUEUE_TYPE = env('QUEUE_TYPE', default='celery')  # or 'sqs' for ElasticBeanstalk
CELERY_BROKER_URL = env('CELERY_BROKER_URL', default='redis://redis:6379')
SQS_REGION = env('SQS_REGION', default='')
SQS_QUEUE_NAME = env('SQS_QUEUE_NAME', default='')


# -------------------------------------------------------------------------------
# UNIONWARE CORE INFORMATION
# -------------------------------------------------------------------------------
UNIONWARE_BASE_URL = env('UNIONWARE_BASE_URL')
UNIONWARE_API_KEY = env('UNIONWARE_API_KEY')

# -------------------------------------------------------------------------------
# KNOX SETTINGS
# -------------------------------------------------------------------------------
REST_KNOX = {
    'TOKEN_TTL': timedelta(days=30),
}
# -------------------------------------------------------------------------------
# Parler Language Settings
# -------------------------------------------------------------------------------
LANGUAGES = (
    ('en', 'English'),
    # ('fr', 'French'),  # commenting for now
)
PARLER_DEFAULT_LANGUAGE_CODE = LANGUAGE_CODE
PARLER_LANGUAGES = {
    None: (
        {'code': 'en'},
        # {'code': 'fr'},  # commenting for now
    ),
    'default': {
        'fallbacks': [LANGUAGE_CODE],
        'hide_untranslated': False,
    },
}

SWAGGER_SETTINGS = {
    'SECURITY_DEFINITIONS': {
        'Bearer': {
            'type': 'apiKey',
            'name': 'Authorization',
            'in': 'header'
        }
    },
    'DEFAULT_FIELD_INSPECTORS': [
        'drf_yasg.inspectors.CamelCaseJSONFilter',
        'drf_yasg.inspectors.InlineSerializerInspector',
        'drf_yasg.inspectors.RelatedFieldInspector',
        'drf_yasg.inspectors.ChoiceFieldInspector',
        'drf_yasg.inspectors.FileFieldInspector',
        'drf_yasg.inspectors.DictFieldInspector',
        'drf_yasg.inspectors.SimpleFieldInspector',
        'drf_yasg.inspectors.StringDefaultFieldInspector',
    ],
    'USE_SESSION_AUTH': False,
}


# -------------------------------------------------------------------------------
# Google Firebase Cloud Messaging Settings
# -------------------------------------------------------------------------------
FCM_SERVER_KEY = env('FCM_SERVER_KEY', default='')

# -------------------------------------------------------------------------------
# AWS Simple Email Service
# -------------------------------------------------------------------------------
EMAIL_SES_HOST_PASSWORD = env('EMAIL_SES_HOST_PASSWORD', default="")
EMAIL_HOST_REGION = env('EMAIL_HOST_REGION', default="")
EMAIL_SES_HOST_USER = env('EMAIL_SES_HOST_USER', default="")
DEFAULT_EMAIL_SENDER = env('DEFAULT_EMAIL_SENDER', default="")

# -------------------------------------------------------------------------------
# CORS SETTINGS
# -------------------------------------------------------------------------------
CORS_ALLOWED_ORIGINS = env.list('CORS_ALLOWED_ORIGINS', default=[])

# -------------------------------------------------------------------------------
# APPLE APP SITE ASSOCIATION FILE PATH for DeepLinking on iOS
# -------------------------------------------------------------------------------
APPLE_APP_SITE_ASSOCIATION_FILE_PATH = os.path.join(BASE_DIR, 'config/apple-app-site-association')

# -------------------------------------------------------------------------------
# ELASTICSEARCH Settings
# -------------------------------------------------------------------------------
ELASTICSEARCH_PROXY_ENDPOINT = env('ELASTICSEARCH_PROXY_ENDPOINT', default='http://elasticsearch:9200')
ELASTICSEARCH_EVENT_LOCATIONS_INDEX = env('ELASTICSEARCH_EVENT_LOCATIONS_INDEX', default='event_search_locations')

if ENVIRONMENT == 'prod':
    ELASTICSEARCH_NON_SEIU_LOCATIONS_INDEX = env(
        'ELASTICSEARCH_NON_SEIU_LOCATIONS_INDEX',
        default='non_seiu_locations_index'
    )
    ELASTICSEARCH_SEIU_UNITS_INDEX = env(
        'ELASTICSEARCH_SEIU_UNITS_INDEX',
        default='seiu_units_index'
    )
    ELASTICSEARCH_SEIU_LOCATIONS_INDEX = env(
        'ELASTICSEARCH_SEIU_LOCATIONS_INDEX',
        default='seiu_locations_index'
    )
    ELASTICSEARCH_SEIU_EMPLOYERS_INDEX = env(
        'ELASTICSEARCH_SEIU_EMPLOYERS_INDEX',
        default='seiu_employers_index'
    )
else:
    ELASTICSEARCH_NON_SEIU_LOCATIONS_INDEX = f'non_seiu_locations_{ENVIRONMENT}_index'
    ELASTICSEARCH_SEIU_UNITS_INDEX = f'seiu_units_{ENVIRONMENT}_index'
    ELASTICSEARCH_SEIU_LOCATIONS_INDEX = f'seiu_locations_{ENVIRONMENT}_index'
    ELASTICSEARCH_SEIU_EMPLOYERS_INDEX = f'seiu_employers_{ENVIRONMENT}_index'

# -------------------------------------------------------------------------------
# SEIU MRC Settings
# -------------------------------------------------------------------------------
MRC_DETAILS = {
    'MRC_EMAIL': env('MRC_EMAIL', default='msc@seiuhealthcare.ca'),
    'MRC_PHONE_NUMBER': env('MRC_PHONE_NUMBER', default='1-877-672-7348'),
    'CALL_TIMING': 'Monday - Friday 8:30am - 4:30pm ET',
    'SEIU_WEB_URL': env('SEIU_WEB_URL', default='seiuhealthcare.ca')
}
# -------------------------------------------------------------------------------
# SEIU RING CENTRAL Settings
# -------------------------------------------------------------------------------
RING_CENTRAL_DETAILS = {
    'CHAT_TIMING': 'Monday – Friday 8:30am - 4:30pm ET',
    'CHAT_HOST': env('CHAT_HOST', default='https://api-c36.nice-incontact.com'),
    'BASIC_AUTH': env('BASIC_AUTH', default=''),
    'POINT_OF_CONTACT': env('POINT_OF_CONTACT', default='')
}

# -------------------------------------------------------------------------------
# Log Audit Settings
# -------------------------------------------------------------------------------
ENABLE_EVENT_AUDIT_LOG = env('ENABLE_EVENT_AUDIT_LOG', default=True)

# -------------------------------------------------------------------------------
# Email SMTP Credentials
# -------------------------------------------------------------------------------
EMAIL_HOST = env('EMAIL_HOST', default='')
EMAIL_PORT = env('EMAIL_PORT', default=587)
EMAIL_HOST_USER = env('EMAIL_HOST_USER', default='')
EMAIL_HOST_PASSWORD = env('EMAIL_HOST_PASSWORD', default='')
DEFAULT_FROM_EMAIL = env('DEFAULT_FROM_EMAIL', default='')
DEFAULT_EMAIL_RECIEVERS = env.list('DEFAULT_EMAIL_RECIEVERS', default=[])
EMAIL_USE_TLS = True

# ----------------------------------------------------------------------------------
# Store links
# ----------------------------------------------------------------------------------
APP_STORE_LINK = env('APP_STORE_LINK', default="https://www.apple.com/in/app-store/")
PLAY_STORE_LINK = env('PLAY_STORE_LINK', default="https://play.google.com/store")

# Disable Automated Notifications
DISABLE_AUTOMATED_NOTIFICATIONS = env.bool('DISABLE_AUTOMATED_NOTIFICATIONS', default=False)

# ----------------------------------------------------------------------------------
# CK Editor settings
# ----------------------------------------------------------------------------------
CKEDITOR_CONFIGS = {
    'default': {
        'toolbar': 'SEIUCustomToolbarConfig',
        'toolbar_Basic': [
            ['Source', '-', 'Bold', 'Italic']
        ],
        'toolbar_SEIUCustomToolbarConfig': [
            {'name': 'clipboard', 'items': ['Undo', 'Redo']},
            {'name': 'basicstyles', 'items': ['Bold', 'Italic', 'Underline', 'Strike', '-', 'RemoveFormat']},
            {'name': 'paragraph', 'items': ['NumberedList', 'BulletedList', '-', 'Outdent', 'Indent', '-',
                                            'JustifyLeft', 'JustifyCenter', 'JustifyRight']},
            {'name': 'links', 'items': ['Link', 'Unlink']},
            {'name': 'insert', 'items': ['HorizontalRule']},
            {'name': 'styles', 'items': ['FontSize']},
            {'name': 'colors', 'items': ['TextColor', 'BGColor']},
            {'name': 'document', 'items': ['Source']},
        ],
        'width': '100%',
        'tabSpaces': 2,
        'extraPlugins': ','.join([
            'autolink',
            'autogrow',
            'clipboard'
        ]),
    }
}
